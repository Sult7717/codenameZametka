import { useEffect, useState } from "react";
import "./App.css";

// üìÖ –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã –≤ —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥: "–î–î.–ú–ú.–ì–ì–ì–ì –ß–ß:–ú–ú"
function formatDate(dateStr) {
  if (!dateStr) return "";
  const d = new Date(dateStr);
  return `${d.getDate().toString().padStart(2, "0")}.${(d.getMonth() + 1)
    .toString()
    .padStart(2, "0")}.${d.getFullYear()} ${d.getHours()
    .toString()
    .padStart(2, "0")}:${d.getMinutes().toString().padStart(2, "0")}`;
}

// üé® –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ä–æ—á–Ω–æ—Å—Ç–∏
function getUrgencyClass(h) {
  if (h.completed) return "completed"; // –µ—Å–ª–∏ –∑–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
  if (!h.date_due) return ""; // –µ—Å–ª–∏ –Ω–µ—Ç –¥–∞—Ç—ã ‚Äî –±–µ–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è

  const today = new Date();
  const due = new Date(h.date_due);
  const diff = Math.floor((due - today) / (1000 * 60 * 60 * 24)); // —Ä–∞–∑–Ω–∏—Ü–∞ –≤ –¥–Ω—è—Ö

  if (diff < 0) return "overdue"; // –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–æ
  if (diff <= 1) return "due-soon"; // —Å—Ä–æ—á–Ω–æ (—Å–¥–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è –∏–ª–∏ –∑–∞–≤—Ç—Ä–∞)
  return "due-later"; // —Å–¥–∞—Ç—å –ø–æ–∑–∂–µ
}

// üè´ –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function App() {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ –≤—Å–µ–º–∏ –∑–∞–¥–∞–Ω–∏—è–º–∏
  const [homework, setHomework] = useState([]);

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  const [showModal, setShowModal] = useState(false);

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è
  const [form, setForm] = useState({
    date_due: "",
    subject: "",
    title: "",
    type: "",
    description: ""
  });

  // üöÄ –ü—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ –∑–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è
  useEffect(() => {
    fetchHomework();
    // –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –ø—Ä–æ—Å–∏–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    if ("Notification" in window) {
      Notification.requestPermission().then(permission => {
        console.log("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:", permission);
      });
    }
  }, []);

  // —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  const sendTestNotification = () => {
    if (!("Notification" in window)) {
      alert("–í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.");
      return;
    }

    if (Notification.permission === "granted") {
      new Notification("–ù–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ!", {
        body: "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–π —Å–ø–∏—Å–æ–∫ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π üìò",
        icon: "https://cdn-icons-png.flaticon.com/512/3135/3135715.png" // –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å
      });
    } else if (Notification.permission === "denied") {
      alert("–†–∞–∑—Ä–µ—à–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±—Ä–∞—É–∑–µ—Ä–∞.");
    } else {
      Notification.requestPermission();
    }
  };

  // üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞–Ω–∏–π —Å —Å–µ—Ä–≤–µ—Ä–∞
  const fetchHomework = async () => {
    const res = await fetch("http://localhost:3000/homework");
    const data = await res.json();
    setHomework(data); // –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  };

  // ‚úçÔ∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ø–æ–ª—è—Ö —Ñ–æ—Ä–º—ã
  const handleChange = e => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  // üíæ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã (—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è)
  const handleSubmit = async e => {
    e.preventDefault();

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
    if (!form.date_due || !form.subject || !form.title) {
      alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: —Å—Ä–æ–∫ —Å–¥–∞—á–∏, –ø—Ä–µ–¥–º–µ—Ç –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫!");
      return;
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä (POST-–∑–∞–ø—Ä–æ—Å)
    await fetch("http://localhost:3000/homework", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(form)
    });

    // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É
    setForm({ date_due: "", subject: "", title: "", type: "", description: "" });
    setShowModal(false);

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π
    fetchHomework();
  };

  // ‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞–Ω–∏—è (–≤—ã–ø–æ–ª–Ω–µ–Ω–æ / –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ)
  const toggleCompleted = async (id, completed) => {
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ (–º–≥–Ω–æ–≤–µ–Ω–Ω–æ)
    setHomework(prev =>
      prev.map(h => (h.id === id ? { ...h, completed } : h))
    );

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä (PATCH-–∑–∞–ø—Ä–æ—Å)
    await fetch(`http://localhost:3000/homework/${id}`, {
      method: "PATCH",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ completed })
    });
  };

  // üóë –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è
  const deleteHomework = async id => {
    const res = await fetch(`http://localhost:3000/homework/${id}`, {
      method: "DELETE"
    });
    const data = await res.json();

    // –ï—Å–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ ‚Äî –æ–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
    if (data.success) {
      setHomework(prev => prev.filter(h => h.id !== id));
    }
  };

  // üìã –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∑–∞–¥–∞–Ω–∏–π:
  // 1. –°–Ω–∞—á–∞–ª–∞ –ø–æ –¥–∞—Ç–µ —Å–¥–∞—á–∏ (—Å–∞–º—ã–µ —Å—Ä–æ—á–Ω—ã–µ ‚Äî –ø–µ—Ä–≤—ã–º–∏)
  // 2. –ü–æ—Ç–æ–º –ø–æ —Å—Ç–∞—Ç—É—Å—É (–Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ ‚Äî –ø–µ—Ä–≤—ã–º–∏)
  const sortedHomework = [...homework]
    .sort((a, b) => {
      const da = a.date_due
        ? new Date(a.date_due)
        : new Date(8640000000000000); // –µ—Å–ª–∏ –Ω–µ—Ç –¥–∞—Ç—ã ‚Äî –≤ –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞
      const db = b.date_due
        ? new Date(b.date_due)
        : new Date(8640000000000000);
      return da - db;
    })
    .sort((a, b) => a.completed - b.completed);

  // üñ•Ô∏è –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
  return (
    <div className="container">
      <h1>–î–Ω–µ–≤–Ω–∏–∫ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π</h1>

      {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ */}
      <button className="open-modal-btn" onClick={() => setShowModal(true)}>
        –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ
      </button>
      <button onClick={sendTestNotification} className="notify-btn">
        üîî –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      </button>

      {/* ü™ü –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è */}
      {showModal && (
        <div className="modal-overlay" onClick={() => setShowModal(false)}>
          <div className="modal" onClick={e => e.stopPropagation()}>
            <h2>–ù–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ</h2>

            {/* –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è */}
            <form onSubmit={handleSubmit}>
              {/* –í–µ—Ä—Ö–Ω—è—è –≥—Ä—É–ø–ø–∞ –ø–æ–ª–µ–π */}
              <div className="top-group">
                <div>
                  <label>–°—Ä–æ–∫ —Å–¥–∞—á–∏:</label>
                  <input
                    type="date"
                    name="date_due"
                    value={form.date_due}
                    onChange={handleChange}
                  />
                </div>

                <div>
                  <label>–ü—Ä–µ–¥–º–µ—Ç:</label>
                  <input
                    list="subjects"
                    name="subject"
                    placeholder="–ü—Ä–µ–¥–º–µ—Ç"
                    value={form.subject}
                    onChange={handleChange}
                  />
                  {/* –ü—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ */}
                  <datalist id="subjects">
                    <option value="–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞" />
                    <option value="–§–∏–∑–∏–∫–∞" />
                    <option value="–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞" />
                    <option value="–ò—Å—Ç–æ—Ä–∏—è" />
                    <option value="–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞" />
                  </datalist>
                </div>

                <div>
                  <label>–¢–∏–ø –∑–∞–¥–∞–Ω–∏—è:</label>
                  <input
                    list="types"
                    name="type"
                    placeholder="–¢–∏–ø –∑–∞–¥–∞–Ω–∏—è"
                    value={form.type}
                    onChange={handleChange}
                  />
                  {/* –°–ø–∏—Å–æ–∫ —Ç–∏–ø–æ–≤ –∑–∞–¥–∞–Ω–∏–π */}
                  <datalist id="types">
                    <option value="–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ" />
                    <option value="–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è" />
                    <option value="–ü—Ä–æ–µ–∫—Ç" />
                    <option value="–î–æ–∫–ª–∞–¥" />
                    <option value="–≠–∫–∑–∞–º–µ–Ω" />
                  </datalist>
                </div>
              </div>

              {/* –í–∏–∑—É–∞–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å */}
              <div className="group-divider"></div>

              {/* –ù–∏–∂–Ω—è—è –≥—Ä—É–ø–ø–∞ –ø–æ–ª–µ–π */}
              <div>
                <label>–ó–∞–≥–æ–ª–æ–≤–æ–∫:</label>
                <input
                  name="title"
                  placeholder="–ó–∞–≥–æ–ª–æ–≤–æ–∫"
                  value={form.title}
                  onChange={handleChange}
                />
              </div>

              <div>
                <label>–û–ø–∏—Å–∞–Ω–∏–µ:</label>
                <textarea
                  name="description"
                  placeholder="–û–ø–∏—Å–∞–Ω–∏–µ"
                  value={form.description}
                  onChange={handleChange}
                ></textarea>
              </div>

              {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–¥–∞–ª–∫–æ–π */}
              <div className="modal-actions">
                <button type="submit">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                <button type="button" onClick={() => setShowModal(false)}>
                  –û—Ç–º–µ–Ω–∞
                </button>
              </div>
            </form>
          </div>
        </div>
      )}

      {/* üóÇÔ∏è –°–ø–∏—Å–æ–∫ –∫–∞—Ä—Ç–æ—á–µ–∫ —Å –∑–∞–¥–∞–Ω–∏—è–º–∏ */}
      <div className="cards">
        {sortedHomework.map(h => (
          <div key={h.id} className={`card ${getUrgencyClass(h)}`}>
            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∞—Ç–∞—Ö */}
            <div className="dates">
              –°–æ–∑–¥–∞–Ω–æ: {formatDate(h.date_created)} | –°—Ä–æ–∫:{" "}
              {h.date_due ? h.date_due.split("-").reverse().join(".") : "‚Äî"}
            </div>

            {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            <div className="title">
              {h.subject} ‚Äî {h.title}
            </div>
            <div className="type">{h.type}</div>
            <div className="desc">{h.description}</div>

            {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
            <div style={{ marginTop: "10px" }}>
              <div className="card-actions">
                {!h.completed && (
                  <button
                    className="done-btn"
                    onClick={() => toggleCompleted(h.id, true)}
                  >
                    –í—ã–ø–æ–ª–Ω–µ–Ω–æ
                  </button>
                )}
                <button className="delete-btn" onClick={() => deleteHomework(h.id)}>
                  –£–¥–∞–ª–∏—Ç—å
                </button>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}

export default App;
